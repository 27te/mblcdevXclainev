---
import "../styles/global.css";
import Navbar from "../components/ui/Navbar.astro";
import { getLangFromUrl } from "../i18n/utils";
import Footer from "../sections/Footer.astro";
import LanguagePicker from "../components/ui/LanguagePicker.astro";

interface Props {
  title: string;
}
const lang = getLangFromUrl(Astro.url);
const { title } = Astro.props;
---

<!doctype html>
<html lang={lang}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title}</title>
  </head>
  <body class="bg-tertiary">
    <Navbar />
    <slot />
    <LanguagePicker />
    <Footer />
    <audio id="music-background" autoplay muted class="hidden">
      <source src="/sound.mp3" type="audio/mpeg" />
    </audio>
  </body>
</html>

<script>
  import Lenis from "lenis";

  const audio = document.getElementById("music-background") as HTMLAudioElement;
  function playMusic() {
    audio.volume = 0.1;
    audio.muted = false;
    audio.play().catch(function (error) {
      console.log("Error al reproducir el audio:", error);
    });
  }

  document.addEventListener(
    "click",
    function () {
      playMusic();
    },
    { once: true }
  );

  const lenis = new Lenis();

  function raf(time: number) {
    lenis.raf(time);
    requestAnimationFrame(raf);
  }

  requestAnimationFrame(raf);
</script>

<script type="text/javascript">
  (function (C, A, L) {
    let p = function (a, ar) {
      a.q.push(ar);
    };
    let d = C.document;
    C.Cal =
      C.Cal ||
      function () {
        let cal = C.Cal;
        let ar = arguments;
        if (!cal.loaded) {
          cal.ns = {};
          cal.q = cal.q || [];
          d.head.appendChild(d.createElement("script")).src = A;
          cal.loaded = true;
        }
        if (ar[0] === L) {
          const api = function () {
            p(api, arguments);
          };
          const namespace = ar[1];
          api.q = api.q || [];
          if (typeof namespace === "string") {
            cal.ns[namespace] = cal.ns[namespace] || api;
            p(cal.ns[namespace], ar);
            p(cal, ["initNamespace", namespace]);
          } else p(cal, ar);
          return;
        }
        p(cal, ar);
      };
  })(window, "https://app.cal.com/embed/embed.js", "init");
  Cal("init", "15min", { origin: "https://cal.com" });

  Cal.ns["15min"]("ui", {
    styles: { branding: { brandColor: "#000000" } },
    hideEventTypeDetails: false,
    layout: "month_view",
  });
</script>

<style is:global>
  html {
    scroll-behavior: smooth;
    cursor: var(--normal-cursor);
    user-select: none;
  }
  a,
  button,
  summary {
    cursor: var(--pointer-cursor);
  }
  img {
    user-select: none;
    -moz-user-select: none;
    -webkit-user-select: none;
  }
</style>
